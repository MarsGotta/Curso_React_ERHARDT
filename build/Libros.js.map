{"version":3,"sources":["../src/Libros.js"],"names":["Libros","configuration","structureId","vocabularyId","name","Liferay","headers","method","response","setCategories","url","selectedCategory","setArticles","handleClick","console","setSelectedCategory","articles","categories"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport Libro from \"./Libro.js\";\r\nimport { Link } from 'react-router-dom';\r\nimport Categorias from './Categorias.js';\r\nimport ListLibros from './ListLibros.js';\r\n\r\nconst Libros = ({configuration}) => {\r\n    const structureId = configuration.portletInstance.structureId;\r\n    const [articles, setArticles] = useState(undefined);\r\n    const vocabularyId = configuration.portletInstance.vocabularyId;\r\n    const [categories, setCategories] = useState(undefined);\r\n    const [selectedCategory, setSelectedCategory] = useState({name: \"Todos\"});\r\n\r\n    useEffect(() => {\r\n        Liferay.Util.fetch(\r\n            `/o/headless-admin-taxonomy/v1.0/taxonomy-vocabularies/${vocabularyId}/taxonomy-categories/`, {\r\n                headers: {\r\n                    'Accept': 'application/json'\r\n                },\r\n                method: 'GET'\r\n            }\r\n        )\r\n        .then((response) => response.json()) \r\n        .then((data) =>  setCategories(data));\r\n\r\n    }, [vocabularyId]);\r\n\r\n    useEffect(() => {\r\n        let url=`/o/headless-delivery/v1.0/content-structures/${structureId}/structured-contents`;\r\n        if(selectedCategory.name!=\"Todos\"){\r\n            url=`/o/headless-delivery/v1.0/content-structures/${structureId}/structured-contents?search=${selectedCategory.name}`\r\n        }\r\n        \r\n        Liferay.Util.fetch(\r\n            url, {\r\n                headers: {\r\n                    'Accept': 'application/json'\r\n                },\r\n                method: 'GET'\r\n            }\r\n        )\r\n        .then((response) => response.json()) \r\n        .then((data) =>  setArticles(data));\r\n\r\n    }, [structureId, selectedCategory]);\r\n\r\n    const handleClick = (item) => {\r\n        console.log(item);\r\n        setSelectedCategory(item);\r\n    }\r\n\r\n    console.log(categories);\r\n    if(articles == undefined || categories == undefined){\r\n        return (\r\n            <div className=\"container\">\r\n                <Link to={'/'}>Volver a home</Link>\r\n                <div>Cargando</div>\r\n            </div>\r\n        )\r\n    }\r\n    else{\r\n        return (\r\n            <div className=\"container\">\r\n                <Link to={'/'}>Volver a home</Link>\r\n                <Categorias categories={categories} onClickCategory={handleClick} selectedCategory={selectedCategory} />\r\n                <ListLibros articles={articles} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Libros;"]}