{"version":3,"sources":["../src/Perfil.js"],"names":["Perfil","configuration","structureId","Liferay","headers","method","response","setArticles","articles"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,YAAA,SAAA,QAAA,kBAAA,CAAA;;;;AACA,YAAA,SAAA,QAAA,SAAA,CAAA;;;;AACA,YAAA,kBAAA,QAAA,6BAAA,CAAA;;;;;;AAEA,YAAMA,SAAS,SAATA,MAAS,CAAA,IAAA,EAAqB;AAAA,gBAAnBC,gBAAmB,KAAnBA,aAAmB;;AAChC,gBAAMC,cAAcD,cAAAA,eAAAA,CAApB,WAAA;;AADgC,gBAAA,YAEA,CAAA,GAAA,OAAA,QAAA,EAFA,SAEA,CAFA;AAAA,gBAAA,aAAA,eAAA,SAAA,EAAA,CAAA,CAAA;AAAA,gBAAA,WAAA,WAAA,CAAA,CAAA;AAAA,gBAAA,cAAA,WAAA,CAAA,CAAA;;AAIhC,aAAA,GAAA,OAAA,SAAA,EAAU,YAAM;AACZE,wBAAAA,IAAAA,CAAAA,KAAAA,CAAAA,kDAAAA,WAAAA,GAAAA,+CAAAA,GAC+GA,QAAAA,YAAAA,CAD/GA,SAC+GA,EAD/GA,EACmJ;AAC3IC,6BAAS;AACL,kCAAU;AADL,qBADkI;AAI3IC,4BAAQ;AAJmI,iBADnJF,EAAAA,IAAAA,CAQM,UAAA,QAAA,EAAA;AAAA,2BAAcG,SAAd,IAAcA,EAAd;AARNH,iBAAAA,EAAAA,IAAAA,CASM,UAAA,IAAA,EAAA;AAAA,2BAAWI,YAAX,IAAWA,CAAX;AATNJ,iBAAAA;AADJ,aAAA,EAAA,EAAA;;AAaA,gBAAGK,YAAH,SAAA,EAAyB;AACrB,uBACI,QAAA,OAAA,CAAA,aAAA,CAAA,KAAA,EAAA,IAAA,EACI,QAAA,OAAA,CAAA,aAAA,CAAA,IAAA,EAAA,IAAA,EAAA,oBAAA,EAAuBL,QAAAA,YAAAA,CAAAA,WAAAA,EAAvB,CADJ,EAEI,QAAA,OAAA,CAAA,aAAA,CAAC,gBAAD,IAAA,EAAA,EAAM,IAAN,SAAA,EAAA,EAAA,uBAAA,CAFJ,CADJ;AADJ,aAAA,MAQI;AACA,uBACI,QAAA,OAAA,CAAA,aAAA,CAAA,KAAA,EAAA,EAAK,WAAL,WAAA,EAAA,EACI,QAAA,OAAA,CAAA,aAAA,CAAA,IAAA,EAAA,IAAA,EAAKA,QAAAA,YAAAA,CAAL,WAAKA,EAAL,EAAA,aAAA,CADJ,EAEKK,SAAAA,UAAAA,GAAAA,CAAAA,GACG,QAAA,OAAA,CAAA,aAAA,CAAA,IAAA,EAAA,IAAA,EACKA,SAAAA,KAAAA,CAAAA,GAAAA,CAAmB,UAAA,IAAA,EAAQ;AACxB,2BAAQ,QAAA,OAAA,CAAA,aAAA,CAAC,QAAD,OAAA,EAAA,EAAO,MAAf,IAAQ,EAAA,CAAR;AADHA,iBAAAA,CADL,CADHA,GAOK,QAAA,OAAA,CAAA,aAAA,CAAA,GAAA,EAAA,IAAA,EAAA,kBAAA,CATV,EAUI,QAAA,OAAA,CAAA,aAAA,CAAC,gBAAD,IAAA,EAAA,EAAM,IAAN,SAAA,EAAA,EAAA,uBAAA,CAVJ,CADJ;AAcH;AAxCL,SAAA;;0BA2CeR,M","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Libro from \"./Libro.js\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Perfil = ({configuration}) => {\r\n    const structureId = configuration.portletInstance.structureId;\r\n    const [articles, setArticles] = useState(undefined);\r\n\r\n    useEffect(() => {\r\n        Liferay.Util.fetch(\r\n            `/o/headless-delivery/v1.0/content-structures/${structureId}/structured-contents?filter=creatorId%20eq%20${Liferay.ThemeDisplay.getUserId()}`, {\r\n                headers: {\r\n                    'Accept': 'application/json'\r\n                },\r\n                method: 'GET'\r\n            }\r\n        )\r\n        .then((response) => response.json()) \r\n        .then((data) =>  setArticles(data));\r\n    }, []);\r\n\r\n    if(articles == undefined){\r\n        return (\r\n            <div>\r\n                <h2>Nombre de perfil: {Liferay.ThemeDisplay.getUserName()}</h2>\r\n                <Link to={'/libros'}>Ir a todos los libros</Link>\r\n            </div>\r\n         )\r\n    }\r\n    else{\r\n        return (\r\n            <div className=\"container\">\r\n                <h2>{Liferay.ThemeDisplay.getUserName()} Tus libros</h2>\r\n                {articles.totalCount > 0 ? (\r\n                    <ul>\r\n                        {articles.items.map(item => {\r\n                            return (<Libro item={item} />)\r\n                        }\r\n                        )}\r\n                    </ul>\r\n                ) : ( <p>No tienes libros</p>) }\r\n                <Link to={'/libros'}>Ir a todos los libros</Link>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Perfil;"]}